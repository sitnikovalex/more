document.addEventListener("DOMContentLoaded", () => {

    new LazyLoad();

    if (document.getElementById('themeSwitch')) {
        const themeSwitch = document.getElementById('themeSwitch');
        themeSwitch.addEventListener('change', () => {
            if (themeSwitch.checked) {
                document.body.classList.remove('cinema-white');
            } else {
                document.body.classList.add('cinema-white');
            }
        });
    }
    if (document.getElementById('indexSlider')) {
        const sliderBrands = new Swiper('#indexSlider', {
            spaceBetween: 30,
            loop: true,
            autoplay: {
                delay: 5000,
            },
            effect: 'creative',
            creativeEffect: {
                prev: {
                    // will set `translateZ(-400px)` on previous slides
                    translate: [0, 0, -400],
                },
                next: {
                    // will set `translateX(100%)` on next slides
                    translate: ['100%', 0, 0],
                },
            },
            navigation: {
                nextEl: '#indexSliderNext',
                prevEl: '#indexSliderPrev',
            },

            pagination: {
                el: '#indexSliderPag',
                clickable: true,
            },

            on: {
                init: function (e) {
                    setTimeout(() => {
                        document.getElementById("indexSliderPag").classList.add('active');
                    }, 50);
                },
                slideChange: function (e) {
                    e.autoplay.run();
                }
            }
        });
    }
    if (document.getElementById('actionSlider')) {
        const sliderBrands = new Swiper('#actionSlider', {
            spaceBetween: 30,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#actionSliderNext',
                prevEl: '#actionSliderPrev',
            },

            breakpoints: {
                300: {
                    slidesPerView: 1,
                    spaceBetween: 15
                },
                600: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 30
                },
            },

        });
    }
    if (document.getElementById('newsSlider')) {
        const sliderBrands = new Swiper('#newsSlider', {
            spaceBetween: 30,
            slidesPerView: 3,
            slidesPerGroup: 1,
            navigation: {
                nextEl: '#newsSliderNext',
                prevEl: '#newsSliderPrev',
            },

            breakpoints: {
                300: {
                    slidesPerView: 1,
                    spaceBetween: 15
                },
                600: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 3,
                    spaceBetween: 30
                },
            },

        });
    }



    /*var lazyLoadInstance = new LazyLoad({
        elements_selector: ".lazy"

    });*/

    const widthScreen = window.innerWidth || document.documentElement.clientWidth ||
        document.body.clientWidth;

    if (widthScreen > 768) {
        window.addEventListener('scroll', onWindowScroll)
        onWindowScroll();

        if (document.getElementById('datepicker')) {
            new AirDatepicker('#datepicker', {
                isMobile: true,
                autoClose: true,
                dateFormat: 'dd MMMM',
                onShow(isFinished) {
                    if (!isFinished) {
                        document.getElementById('dateCustom').checked = true;
                    }
                }
            });
        }

    } else {

        if (document.getElementById('datepicker')) {
            new AirDatepicker('#datepicker', {
                isMobile: true,
                autoClose: true,
                dateFormat: 'dd MMM',
                onShow(isFinished) {
                    if (!isFinished) {
                        document.getElementById('dateCustom').checked = true;
                    }
                }
            });
        }

        if (document.getElementById('mobTabs')) {
            const sliderBrands = new Swiper('#mobTabs', {
                spaceBetween: 20,
                slidesPerView: 'auto',
                slideClass: 'nav-tabs__list__item'
            });
        }

        if (document.getElementById('mobNavSb')) {
            const sliderBrands = new Swiper('#mobNavSb', {
                spaceBetween: 20,
                slidesPerView: 'auto',
                slideClass: 'cinema__cabinet__body__nav__item'
            });
        }
    }

    function onWindowScroll() {
        if (window.document.scrollingElement.scrollTop > 150) {
            document.body.classList.add("fixed-menu");
        } else {
            document.body.classList.remove("fixed-menu");
        }
    }

    const selectCustom = document.querySelectorAll('.js-select');

    selectCustom.forEach(el => {
        new Choices(el, {
            searchEnabled: false,
            removeItemButton: false,
        });
    });

    if (document.getElementById('cityReg')) {
        const cityReg = new Choices(document.getElementById('cityReg'), {
            placeholder: true,
            placeholderValue: 'Выберите город',
            searchEnabled: false,
            removeItemButton: false,
        });

        cityReg.passedElement.element.addEventListener(
            'change',
            function (event) {
                if (event.detail.value !== '') {
                    document.getElementById('cityRegBox').classList.add('is-valid');
                }
            },
            false,
        );
    }

    const dataPick = document.querySelectorAll('.js-date');

    dataPick.forEach(el => {
        new AirDatepicker(el, {
            isMobile: true,
            autoClose: true,
            dateFormat: 'dd.MM.yyyy',
            onHide: () => {
                if (el.value.length > 0) {
                    var event = new Event('input');
                    el.dispatchEvent(event);
                }
            }
        });
    });

    const maskPhone = document.querySelectorAll('.js-mask-phone');
    maskPhone.forEach(el => {
        let im = new Inputmask("+7 999 999-99-99", {"clearIncomplete": true});
        im.mask(el);
    });


    if (document.getElementById('field__file-2')) {
        let input = document.getElementById('field__file-2');
        input.addEventListener('change', function (e) {
            if (this.files && this.files.length >= 1) {
                document.getElementById('field__file-2__value').innerHTML = this.files[0].name;
            }

        });
    }


    if (document.getElementById('formPhoneAuth')) {
        const formPhoneAuth = new JustValidate('#formPhoneAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formPhoneAuth
            .addField('#phoneAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .onSuccess((event) => {
                let formData = new FormData(event.target);
                console.log(...formData);
                event.target.reset();
            });

        document.getElementById("phoneAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0) {
                document.getElementById('formPhoneAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
    }

    if (document.getElementById('formEmailAuth')) {
        const formEmailAuth = new JustValidate('#formEmailAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formEmailAuth
            .addField('#emailAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите email',
                },
                {
                    rule: 'email',
                    errorMessage: 'Введите email',
                },
            ])
            .addField('#passAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                },
            ])
            .onSuccess((event) => {
                //document.getElementById("formPhoneAuth").submit();
            });

        document.getElementById("emailAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0 && document.getElementById("passAuth").value.length > 0) {
                document.getElementById('formEmailAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
        document.getElementById("passAuth").addEventListener('input', (event) => {
            if (event.target.value.length > 0 && document.getElementById("emailAuth").value.length > 0) {
                document.getElementById('formEmailAuth').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
    }


    const jsPass = document.querySelectorAll('.js-pass');

    jsPass.forEach(el => {
        el.addEventListener('click', (event) => {
            if (document.getElementById(el.dataset.target)) {
                let inputPass = document.getElementById(el.dataset.target);
                if (inputPass.type === 'password') {
                    inputPass.type = 'text';
                    el.classList.add('active');
                } else {
                    inputPass.type = 'password';
                    el.classList.remove('active');
                }
            }
        });
    });

    if (document.getElementById('phoneCodeAuth')) {
        let phoneCodeAuth = new Inputmask("9 9 9 9", {"clearIncomplete": true});
        phoneCodeAuth.mask(document.getElementById('phoneCodeAuth'));

        const formPhoneCodeAuth = new JustValidate('#formPhoneCodeAuth', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formPhoneCodeAuth
            .addField('#phoneCodeAuth', [
                {
                    rule: 'required',
                    errorMessage: 'Введите код',
                },
                {
                    validator: (value) => {
                        if (value != '') {
                            if (value.replace(/ /g, '').replace(/_/g, '').length === 4)
                                return true;
                        }
                        return false;
                    },
                    errorMessage: '4',
                }
            ])
            .onValidate((event) => {
                if (event.isValid) {
                    document.getElementById('formPhoneCodeAuth').querySelector('button[type="submit"]').classList.remove('disabled');
                }
            });
    }

    if (document.getElementById('forgotEmailForm')) {
        const formEmailAuth = new JustValidate('#forgotEmailForm', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formEmailAuth
            .addField('#forgotEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Введите email',
                },
                {
                    rule: 'email',
                    errorMessage: 'Введите email',
                },
            ])
            .onSuccess((event) => {
                //document.getElementById("formPhoneAuth").submit();
            });

        document.getElementById("forgotEmail").addEventListener('input', (event) => {
            if (event.target.value.length > 0) {
                document.getElementById('forgotEmailForm').querySelector('button[type="submit"]').classList.remove('disabled');
            }
        });
    }

    if (document.getElementById('formReg')) {
        const formReg = new JustValidate('#formReg', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                validateBeforeSubmitting: true,
            }
        );
        formReg
            .addField('#phoneReg', [
                {
                    rule: 'required',
                    errorMessage: 'Введите номер телефона',
                },
            ])
            .addField('#emailReg', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#passReg', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                },
            ])
            .addField('#passReg2', [
                {
                    rule: 'required',
                    errorMessage: 'Введите пароль',
                },
                {
                    validator: (value, fields) => {
                        if (
                            fields['#passReg'] &&
                            fields['#passReg'].elem
                        ) {
                            const repeatPasswordValue =
                                fields['#passReg'].elem.value;

                            return value === repeatPasswordValue;
                        }

                        return true;
                    },
                    errorMessage: 'Пароль не совпадает',
                },
            ])
            .addField('#nameReg', [
                {
                    rule: 'required',
                    errorMessage: 'Введите имя',
                },
            ])
            .addField('#lastnameReg', [
                {
                    rule: 'required',
                    errorMessage: 'Введите фамилию',
                },
            ])
            .addRequiredGroup(
                '#genderRegInp',
                'Выберите пол',
                {
                    errorsContainer: '#errors-container-gender',
                }
            )
            .addField('#dateReg', [
                {
                    rule: 'required',
                    errorMessage: 'Введите дату рождения',
                },
            ])
            .addField('#cityReg', [
                {
                    rule: 'required',
                    errorMessage: 'Выберите город',
                },
            ])
            .addField(
                '#politikaReg', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                        errorsContainer: '#errors-container-politika'
                    }
                ])
            .onValidate((event) => {
                console.log(event.isValid);
                if (event.isValid) {
                    document.getElementById('formReg').querySelector('button[type="submit"]').classList.remove('disabled');
                }
            })
            .onSuccess((event) => {
                //document.getElementById("formPhoneAuth").submit();
            });
    }

    if (document.getElementById('dateReg')) {
        const dateReg = document.getElementById('dateReg');
        new AirDatepicker(dateReg, {
            isMobile: true,
            autoClose: true,
            dateFormat: 'dd.MM.yyyy',
            onHide: () => {
                if (document.getElementById('dateReg').value.length > 0) {
                    // document.getElementById('dateReg').classList.add('is-valid');
                    var event = new Event('input');
                    var elem = document.getElementById('dateReg');
                    elem.dispatchEvent(event);
                }
            }
        });
    }

    if (document.getElementById('isBonusCard')) {
        document.getElementById('isBonusCard').addEventListener('click', () => {
            if (document.getElementById('isBonusCard').querySelector('input').checked) {
                document.getElementById('bonusCardBox').classList.remove('d-none');
            } else {
                document.getElementById('bonusCardBox').classList.add('d-none');
            }
        });

        let bonusCardReg = new Inputmask("9 9 9 9 9 9", {
            "oncomplete": function () {
                document.getElementById('bonusCardReg').classList.add('is-valid');
            }
        });
        bonusCardReg.mask(document.getElementById('bonusCardReg'));
    }

    if (document.getElementById('formRentRoom')) {
        const formRentRoom = new JustValidate('#formRentRoom', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                //validateBeforeSubmitting: true,
            }
        );
        formRentRoom
            .addField('#formRentRoomCity', [
                {
                    rule: 'required',
                    errorMessage: 'Выберите город',
                },
            ])
            .addField('#formRentRoomEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#formRentRoomEvent', [
                {
                    rule: 'required',
                    errorMessage: 'Выберите тип мероприятия',
                },
            ])
            .addField('#formRentRoomQuest', [
                {
                    rule: 'required',
                    errorMessage: 'Введите количество гостей',
                },
            ])
            .addField('#formRentRoomDateEvent', [
                {
                    rule: 'required',
                    errorMessage: 'Введите дату мероприятия',
                },
            ])
            .addField('#formRentRoomFio', [
                {
                    rule: 'required',
                    errorMessage: 'Введите ФИО',
                },
            ])
            .addField('#formRentRoomPhone', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .addField(
                '#formRentRoomPolitika', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                        //errorsContainer: '#errors-formRentRoomPolitika'
                    }
                ])
            .onValidate((event) => {

            })
            .onSuccess((event) => {

            });
    }

    if (document.getElementById('formRentArea')) {
        const formRentArea = new JustValidate('#formRentArea', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                //validateBeforeSubmitting: true,
            }
        );
        formRentArea
            .addField('#formRentAreaEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#formRentAreaName', [
                {
                    rule: 'required',
                    errorMessage: 'Введите ФИО',
                },
            ])
            .addField('#formRentAreaPhone', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .addField(
                '#formRentAreaPolitika', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                        //errorsContainer: '#errors-formRentRoomPolitika'
                    }
                ])
            .onValidate((event) => {

            })
            .onSuccess((event) => {

            });
    }

    if (document.getElementById('formReclama')) {
        const formReclama = new JustValidate('#formReclama', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                //validateBeforeSubmitting: true,
            }
        );
        formReclama
            .addField('#formReclamaEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#formReclamaFio', [
                {
                    rule: 'required',
                    errorMessage: 'Введите ФИО',
                },
            ])
            .addField('#formReclamaPhone', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .addField('#formReclamaDate', [
                {
                    rule: 'required',
                    errorMessage: 'Введите дату',
                },
            ])
            .addField(
                '#formReclamaPolitika', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                        //errorsContainer: '#errors-formRentRoomPolitika'
                    }
                ])
            .onValidate((event) => {

            })
            .onSuccess((event) => {

            });
    }

    if (document.getElementById('formJobs')) {
        const formJobs = new JustValidate('#formJobs', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                //validateBeforeSubmitting: true,
            }
        );
        formJobs
            .addField('#formJobsEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#formJobsName', [
                {
                    rule: 'required',
                    errorMessage: 'Введите ФИО',
                },
            ])
            .addField('#formJobsTel', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .addField(
                '#formJobsPolitika', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                        //errorsContainer: '#errors-formRentRoomPolitika'
                    }
                ])
            .onValidate((event) => {

            })
            .onSuccess((event) => {

            });
    }

    if (document.getElementById('formFeedback')) {
        const formFeedback = new JustValidate('#formFeedback', {
                errorFieldCssClass: 'is-invalid',
                successFieldCssClass: 'is-valid',
                //validateBeforeSubmitting: true,
            }
        );
        formFeedback
            .addField('#formFeedbackEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Укажите ваш E-mail',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                },
            ])
            .addField('#formFeedbackFio', [
                {
                    rule: 'required',
                    errorMessage: 'Введите ФИО',
                },
            ])
            .addField('#formFeedbackTel', [
                {
                    rule: 'required',
                    errorMessage: 'Введите телефон',
                },
            ])
            .addField(
                '#formFeedbackPolitika', [
                    {
                        rule: 'required',
                        errorMessage: 'Обязательно',
                    }
                ])
            .onValidate((event) => {

            })
            .onSuccess((event) => {

            });
    }


    if (document.getElementById('timeSelect')) {
        new Choices(document.getElementById('timeSelect'), {
            placeholder: false,
            searchEnabled: false,
            removeItemButton: false,
            shouldSort: false,
        });

    }

    if (document.getElementById('filterSlider')) {
        const filterSlider = new Swiper('#filterSlider', {
            spaceBetween: 20,
            slidesPerView: 'auto',
        });
    }

    if (document.getElementById('phoneNumber')) {
        let phoneNumber = new Inputmask("9 9 9 9");
        phoneNumber.mask(document.getElementById('phoneNumber'));
    }

    if (document.getElementById('orderPromo')) {
        document.getElementById('orderPromo').addEventListener('change', () => {
            if (document.getElementById('orderPromo').checked) {
                document.getElementById('promoCardBox').classList.remove('d-none');
            } else {
                document.getElementById('promoCardBox').classList.add('d-none');
            }
        });
    }

    if (document.getElementById('orderSert')) {
        document.getElementById('orderSert').addEventListener('change', () => {
            if (document.getElementById('orderSert').checked) {
                document.getElementById('orderSertBox').classList.remove('d-none');
            } else {
                document.getElementById('orderSertBox').classList.add('d-none');
            }
        });
    }


});

function validate(evt) {
    var theEvent = evt || window.event;
    // Handle paste
    if (theEvent.type === 'paste') {
        key = event.clipboardData.getData('text/plain');
    } else {
        // Handle key press
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
    }
    var regex = /[0-9]|\./;
    if( !regex.test(key) ) {
        theEvent.returnValue = false;
        if(theEvent.preventDefault) theEvent.preventDefault();
    }
}



function logElementEvent(eventName, element) {
    console.log(Date.now(), eventName, element.getAttribute("data-bg88da112-bg-hidpi=bg"));
}

